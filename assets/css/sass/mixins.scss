///////////////////////////////////////
// Mixins
///////////////////////////////////////

// Transitions
@mixin transition($properties) {
  -webkit-transition: $properties;
     -moz-transition: $properties;
       -o-transition: $properties;
          transition: $properties;
  -webkit-backface-visibility: hidden;
}

// Animations
@mixin animation($properties) {
  -webkit-animation: $properties;
     -moz-animation: $properties;
       -o-animation: $properties;
          animation: $properties;
}

// Border Radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
          border-radius: $radius;
}

// Box Sizing
@mixin box-sizing($boxmodel: border-box) {
  -webkit-box-sizing: $boxmodel;
     -moz-box-sizing: $boxmodel;
          box-sizing: $boxmodel;
}

// Box Shadow
@mixin box-shadow($properties) {
  -webkit-box-shadow: $properties;
     -moz-box-shadow: $properties;
          box-shadow: $properties;
}

// Breakpoints
@mixin breakpoint($point) {
  @if $point == papa-bear {
    @media (max-width: 1600px) { @content; }
  }
  @else if $point == mama-bear {
    @media (max-width: 1250px) { @content; }
  }
  @else if $point == baby-bear {
    @media (max-width: 650px)  { @content; }
  }
}

// Button
@mixin button($color, $text-color) {
  display: inline-block;
  outline: none;
  cursor: pointer;
  text-align: center;
  text-decoration: none;
  font: 18px/100% $sans-serif;
  padding: 1em 4em 1em;
  @include border-radius(4px);
  color: $text_color !important;
  font-weight: bold;
  background: $color;
  border: 2px solid $color;
  @include transition(background 200ms ease-out);
  @include breakpoint(baby-bear) { width: 100%; }
  &:hover {
    text-decoration: none;
    background: saturate($color, 10%);
    @include transition(background 200ms ease-in);
  }
  &:active {
    position: relative;
    top: 1px;
    color: saturate($color, 15%);
  }
}

// Inline Block
@mixin inline-block {
  display: inline-block;
  zoom: 1;
  *display: inline;
}

// Opacity
@mixin opacity($value) {
  opacity: $value / 100;
  filter: alpha(opacity=$value);
  zoom: 1;
}

// Hide Text
@mixin hide-text{
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
}

// Retina Image Replacement
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: image-url($image);
    background-size: $width $height;
  }
}

// Full Width Backgrounds
@mixin full-width-background($pos1, $pos2) {
  width: 100%;
  background-repeat: no-repeat; 
  background-position: $pos1 $pos2;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
  @include box-sizing;
}

// Clearfix
@mixin clearfix {
  *zoom: 1;
  &:before,
  &:after {
    display: table;
    content: "";
  }
  &:after {
    clear: both;
  }
}